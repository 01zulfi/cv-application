{"version":3,"sources":["components/GeneralInfoForm.js","components/EducationInfoForm.js","components/WorkInfoForm.js","components/SkillsInfoForm.js","components/CVInput.js","components/CVDisplay.js","App.js","index.js"],"names":["GeneralInfoForm","props","generalInfoData","firstName","lastName","email","phone","title","objective","inputHandler","bind","event","dataHandler","this","target","id","value","className","htmlFor","type","onChange","Component","defaultProps","EducationInfoForm","state","data","removeForm","incrementQuantity","isPresentHandler","parentNode","getAttribute","newData","filter","el","Number","setState","concat","Math","floor","random","Date","now","closest","map","newObj","educationQualification","educationInstitute","educationStartDate","educationEndDate","checked","form","endDateInput","querySelector","setAttribute","removeAttribute","onClick","WorkInfoForm","workTitle","workCompany","workStartDate","workEndDate","workResponsibilities","SkillsInfoForm","skill","CVInput","style","CVDisplay","CVData","general","education","work","skills","generalDiv","App","CVInputStyle","display","CVDisplayStyle","editButtonEventHandler","previewButtonEventHandler","section","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60b2f558.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../styles/GeneralInfoForm.css\";\n\nclass GeneralInfoForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.generalInfoData = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      phone: \"\",\n      title: \"\",\n      objective: \"\",\n    };\n\n    this.inputHandler = this.inputHandler.bind(this);\n  }\n\n  inputHandler(event) {\n    const { dataHandler } = this.props;\n\n    if (event.target.id === \"first-name-input\") {\n      this.generalInfoData.firstName = event.target.value;\n    }\n    if (event.target.id === \"last-name-input\") {\n      this.generalInfoData.lastName = event.target.value;\n    }\n    if (event.target.id === \"email-input\") {\n      this.generalInfoData.email = event.target.value;\n    }\n    if (event.target.id === \"phone-number-input\") {\n      this.generalInfoData.phone = event.target.value;\n    }\n    if (event.target.id === \"job-title-input\") {\n      this.generalInfoData.title = event.target.value;\n    }\n    if (event.target.id === \"objective-input\") {\n      this.generalInfoData.objective = event.target.value;\n    }\n\n    dataHandler(\"general\", this.generalInfoData);\n  }\n\n  render() {\n    return (\n      <div className=\"general-info-form-div\">\n        <h2>\n          General\n        </h2>\n        <form>\n          <label htmlFor=\"first-name-input\">\n            First Name:\n            <input type=\"text\" id=\"first-name-input\" onChange={this.inputHandler} />\n          </label>\n          <label htmlFor=\"last-name-input\">\n            Last Name:\n            <input type=\"text\" id=\"last-name-input\" onChange={this.inputHandler} />\n          </label>\n          <label htmlFor=\"email-input\">\n            Email:\n            <input type=\"email\" id=\"email-input\" onChange={this.inputHandler} />\n          </label>\n          <label htmlFor=\"phone-number-input\">\n            Phone Number:\n            <input type=\"text\" id=\"phone-number-input\" onChange={this.inputHandler} />\n          </label>\n          <label htmlFor=\"job-title-input\">\n            Title:\n            <input type=\"text\" id=\"job-title-input\" onChange={this.inputHandler} />\n          </label>\n          <label htmlFor=\"objective-input\">\n            Objective:\n            <textarea type=\"text\" id=\"objective-input\" onChange={this.inputHandler} />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nGeneralInfoForm.propTypes = {\n  dataHandler: PropTypes.func,\n};\n\nGeneralInfoForm.defaultProps = {\n  dataHandler: () => {},\n};\n\nexport default GeneralInfoForm;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../styles/EducationInfoForm.css\";\n\nconst uniqueId = () => Math.floor(Math.random() * Date.now());\n\nclass EducationInfoForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n    };\n\n    this.removeForm = this.removeForm.bind(this);\n    this.incrementQuantity = this.incrementQuantity.bind(this);\n    this.inputHandler = this.inputHandler.bind(this);\n    this.isPresentHandler = this.isPresentHandler.bind(this);\n  }\n\n  removeForm(event) {\n    const { dataHandler } = this.props;\n    const id = event.target.parentNode.getAttribute(\"data-id\");\n    const { data } = this.state;\n    const newData = data.filter((el) => el.id !== Number(id));\n\n    dataHandler(\"education\", newData);\n    this.setState({\n      data: newData,\n    });\n  }\n\n  incrementQuantity() {\n    const { data } = this.state;\n\n    this.setState({\n      data: data.concat({ id: uniqueId() }),\n    });\n  }\n\n  inputHandler(event) {\n    const { dataHandler } = this.props;\n    const id = Number(event.target.closest(\"form\").getAttribute(\"data-id\"));\n    const { data } = this.state;\n    let newData = [];\n\n    if (event.target.id === \"education-qualification\") {\n      newData = data.map((el) => {\n        const newObj = { ...el };\n        if (newObj.id === id) {\n          newObj.educationQualification = event.target.value;\n        }\n        return newObj;\n      });\n    }\n    if (event.target.id === \"education-institute\") {\n      newData = data.map((el) => {\n        const newObj = { ...el };\n        if (newObj.id === id) {\n          newObj.educationInstitute = event.target.value;\n        }\n        return newObj;\n      });\n    }\n    if (event.target.id === \"education-start-date\") {\n      newData = data.map((el) => {\n        const newObj = { ...el };\n        if (newObj.id === id) {\n          newObj.educationStartDate = event.target.value;\n        }\n        return newObj;\n      });\n    }\n    if (event.target.id === \"education-end-date\") {\n      newData = data.map((el) => {\n        const newObj = { ...el };\n        if (newObj.id === id) {\n          newObj.educationEndDate = event.target.value;\n        }\n        return newObj;\n      });\n    }\n\n    dataHandler(\"education\", newData);\n    this.setState({\n      data: newData,\n    });\n  }\n\n  isPresentHandler(event) {\n    if (event.target.id !== \"is-present\") return;\n\n    const { checked } = event.target;\n    const form = event.target.closest(\"form\");\n    const id = Number(form.getAttribute(\"data-id\"));\n    const { data } = this.state;\n    let newData = [];\n    const { dataHandler } = this.props;\n    const endDateInput = form.querySelector(\"#education-end-date\");\n\n    if (!checked) {\n      endDateInput.removeAttribute(\"disabled\");\n\n      newData = data.map((el) => {\n        const newObj = { ...el };\n        if (newObj.id === id) {\n          newObj.educationEndDate = endDateInput.value || \"\";\n        }\n        return newObj;\n      });\n    } else {\n      endDateInput.setAttribute(\"disabled\", \"true\");\n\n      newData = data.map((el) => {\n        const newObj = { ...el };\n        if (newObj.id === id) {\n          newObj.educationEndDate = \"Present\";\n        }\n        return newObj;\n      });\n    }\n\n    dataHandler(\"education\", newData);\n    this.setState({\n      data: newData,\n    });\n  }\n\n  render() {\n    const { data } = this.state;\n\n    const form = (id) => (\n      <form data-id={id}>\n        Qualification:\n        <input type=\"text\" id=\"education-qualification\" onChange={this.inputHandler} />\n        Institute:\n        <input type=\"text\" id=\"education-institute\" onChange={this.inputHandler} />\n        From:\n        <input type=\"date\" id=\"education-start-date\" onChange={this.inputHandler} />\n        To:\n        <input type=\"date\" id=\"education-end-date\" onChange={this.inputHandler} />\n        <div className=\"is-present-checkbox\">\n          Present\n          <input type=\"checkbox\" id=\"is-present\" onChange={this.isPresentHandler} />\n        </div>\n        <button type=\"button\" onClick={this.removeForm}>Delete</button>\n      </form>\n    );\n\n    return (\n      <div className=\"education-info-form-div\">\n        <h2>Education</h2>\n        <button type=\"button\" onClick={this.incrementQuantity}>Add Education</button>\n        {data.map((el) => <div key={el.id}>{form(el.id)}</div>)}\n      </div>\n    );\n  }\n}\n\nEducationInfoForm.propTypes = {\n  dataHandler: PropTypes.func,\n};\n\nEducationInfoForm.defaultProps = {\n  dataHandler: () => {},\n};\n\nexport default EducationInfoForm;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../styles/WorkInfoForm.css\";\n\nconst uniqueId = () => Math.floor(Math.random() * Date.now());\n\nclass WorkInfoForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n    };\n\n    this.removeForm = this.removeForm.bind(this);\n    this.incrementQuantity = this.incrementQuantity.bind(this);\n    this.inputHandler = this.inputHandler.bind(this);\n    this.isPresentHandler = this.isPresentHandler.bind(this);\n  }\n\n  removeForm(event) {\n    const { dataHandler } = this.props;\n    const id = event.target.parentNode.getAttribute(\"data-id\");\n    const { data } = this.state;\n    const newData = data.filter((el) => el.id !== Number(id));\n\n    dataHandler(\"work\", newData);\n    this.setState({\n      data: newData,\n    });\n  }\n\n  incrementQuantity() {\n    const { data } = this.state;\n    this.setState({\n      data: data.concat({ id: uniqueId() }),\n    });\n  }\n\n  inputHandler(event) {\n    const { dataHandler } = this.props;\n    const id = Number(event.target.closest(\"form\").getAttribute(\"data-id\"));\n    const { data } = this.state;\n    let newData = [];\n\n    if (event.target.id === \"work-title\") {\n      newData = data.map((el) => {\n        const newObj = { ...el };\n        if (newObj.id === id) {\n          newObj.workTitle = event.target.value;\n        }\n        return newObj;\n      });\n    }\n    if (event.target.id === \"work-company\") {\n      newData = data.map((el) => {\n        const newObj = { ...el };\n        if (newObj.id === id) {\n          newObj.workCompany = event.target.value;\n        }\n        return newObj;\n      });\n    }\n    if (event.target.id === \"work-start-date\") {\n      newData = data.map((el) => {\n        const newObj = { ...el };\n        if (newObj.id === id) {\n          newObj.workStartDate = event.target.value;\n        }\n        return newObj;\n      });\n    }\n    if (event.target.id === \"work-end-date\") {\n      newData = data.map((el) => {\n        const newObj = { ...el };\n        if (newObj.id === id) {\n          newObj.workEndDate = event.target.value;\n        }\n        return newObj;\n      });\n    }\n    if (event.target.id === \"work-responsibilites\") {\n      newData = data.map((el) => {\n        const newObj = { ...el };\n        if (newObj.id === id) {\n          newObj.workResponsibilities = event.target.value;\n        }\n        return newObj;\n      });\n    }\n\n    dataHandler(\"work\", newData);\n    this.setState({\n      data: newData,\n    });\n  }\n\n  isPresentHandler(event) {\n    if (event.target.id !== \"is-present\") return;\n\n    const { checked } = event.target;\n    const form = event.target.closest(\"form\");\n    const id = Number(form.getAttribute(\"data-id\"));\n    const { data } = this.state;\n    let newData = [];\n    const { dataHandler } = this.props;\n    const endDateInput = form.querySelector(\"#work-end-date\");\n\n    if (!checked) {\n      endDateInput.removeAttribute(\"disabled\");\n\n      newData = data.map((el) => {\n        const newObj = { ...el };\n        if (newObj.id === id) {\n          newObj.workEndDate = endDateInput.value || \"\";\n        }\n        return newObj;\n      });\n    } else {\n      endDateInput.setAttribute(\"disabled\", \"true\");\n\n      newData = data.map((el) => {\n        const newObj = { ...el };\n        if (newObj.id === id) {\n          newObj.workEndDate = \"Present\";\n        }\n        return newObj;\n      });\n    }\n\n    dataHandler(\"work\", newData);\n    this.setState({\n      data: newData,\n    });\n  }\n\n  render() {\n    const { data } = this.state;\n\n    const form = (id) => (\n      <form data-id={id}>\n        Title:\n        <input type=\"text\" id=\"work-title\" onChange={this.inputHandler} />\n        Company:\n        <input type=\"text\" id=\"work-company\" onChange={this.inputHandler} />\n        From:\n        <input type=\"date\" id=\"work-start-date\" onChange={this.inputHandler} />\n        To:\n        <input type=\"date\" id=\"work-end-date\" onChange={this.inputHandler} />\n        <div className=\"is-present-checkbox\">\n          Present\n          <input type=\"checkbox\" id=\"is-present\" onChange={this.isPresentHandler} />\n        </div>\n        Responsibilites:\n        <textarea type=\"text\" id=\"work-responsibilites\" onChange={this.inputHandler} />\n        <button type=\"button\" onClick={this.removeForm}>Delete</button>\n      </form>\n    );\n\n    return (\n      <div className=\"work-info-form-div\">\n        <h2>Work </h2>\n        <button type=\"submit\" onClick={this.incrementQuantity}>Add Work</button>\n        {data.map((el) => <div key={el.id}>{form(el.id)}</div>)}\n      </div>\n    );\n  }\n}\n\nWorkInfoForm.propTypes = {\n  dataHandler: PropTypes.func,\n};\n\nWorkInfoForm.defaultProps = {\n  dataHandler: () => {},\n};\n\nexport default WorkInfoForm;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../styles/SkillsInfoForm.css\";\n\nconst uniqueId = () => Math.floor(Math.random() * Date.now());\n\nclass SkillsInfoForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n    };\n\n    this.removeForm = this.removeForm.bind(this);\n    this.inputHandler = this.inputHandler.bind(this);\n    this.incrementQuantity = this.incrementQuantity.bind(this);\n  }\n\n  removeForm(event) {\n    const { dataHandler } = this.props;\n    const id = event.target.parentNode.getAttribute(\"data-id\");\n    const { data } = this.state;\n    const newData = data.filter((el) => el.id !== Number(id));\n\n    dataHandler(\"skills\", newData);\n    this.setState({\n      data: newData,\n    });\n  }\n\n  incrementQuantity() {\n    const { data } = this.state;\n\n    this.setState({\n      data: data.concat({ id: uniqueId() }),\n    });\n  }\n\n  inputHandler(event) {\n    const { dataHandler } = this.props;\n    const id = Number(event.target.closest(\"form\").getAttribute(\"data-id\"));\n    const { data } = this.state;\n    let newData = [];\n\n    if (event.target.id === \"skills-input\") {\n      newData = data.map((el) => {\n        const newObj = { ...el };\n        if (newObj.id === id) {\n          newObj.skill = event.target.value;\n        }\n        return newObj;\n      });\n    }\n\n    dataHandler(\"skills\", newData);\n    this.setState({\n      data: newData,\n    });\n  }\n\n  render() {\n    const { data } = this.state;\n\n    const form = (id) => (\n      <form key={id} data-id={id}>\n        <input type=\"text\" id=\"skills-input\" onChange={this.inputHandler} />\n        <button type=\"button\" onClick={this.removeForm}>Delete</button>\n      </form>\n    );\n\n    return (\n      <div className=\"skills-info-form-div\">\n        <h2>Skills</h2>\n        <button type=\"button\" onClick={this.incrementQuantity}>Add Skill</button>\n        {data.map((el) => form(el.id))}\n      </div>\n    );\n  }\n}\n\nSkillsInfoForm.propTypes = {\n  dataHandler: PropTypes.func,\n};\n\nSkillsInfoForm.defaultProps = {\n  dataHandler: () => {},\n};\nexport default SkillsInfoForm;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport GeneralInfoForm from \"./GeneralInfoForm\";\nimport EducationInfoForm from \"./EducationInfoForm\";\nimport WorkInfoForm from \"./WorkInfoForm\";\nimport SkillsInfoForm from \"./SkillsInfoForm\";\nimport \"../styles/CVInput.css\";\n\nclass CVInput extends Component {\n  render() {\n    const { style, dataHandler } = this.props;\n\n    return (\n      <div className=\"CV-input\" style={style}>\n        <GeneralInfoForm dataHandler={dataHandler} />\n        <EducationInfoForm dataHandler={dataHandler} />\n        <WorkInfoForm dataHandler={dataHandler} />\n        <SkillsInfoForm dataHandler={dataHandler} />\n      </div>\n    );\n  }\n}\n\nCVInput.propTypes = {\n  style: PropTypes.object,\n  dataHandler: PropTypes.func,\n};\n\nCVInput.defaultProps = {\n  style: {},\n  dataHandler: () => {},\n};\n\nexport default CVInput;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"../styles/CVDisplay.css\";\n\nclass CVDisplay extends Component {\n  render() {\n    const { style, CVData } = this.props;\n    const {\n      general, education, work, skills,\n    } = CVData;\n\n    const generalDiv = (\n      <div className=\"general-info-display\">\n        <p className=\"name-display\">\n          {general.firstName}\n          {\" \"}\n          {general.lastName}\n        </p>\n        <p className=\"title-display\">{general.title}</p>\n        <div className=\"contact-details-div\">\n          <p>{general.email}</p>\n          <p>{general.phone}</p>\n        </div>\n        <p>{general.objective}</p>\n      </div>\n    );\n\n    const skillsDiv = (data) => (\n      <div key={data.id} className=\"skills-info-display\">\n        <p className=\"skill-display\">{data.skill}</p>\n      </div>\n    );\n\n    const educationDiv = (data) => (\n      <div key={data.id} className=\"education-info-display\">\n        <p className=\"education-qualification-display\">{data.educationQualification}</p>\n        <p>{data.educationInstitute}</p>\n        <p className=\"education-time\">\n          From:\n          {data.educationStartDate}\n          {\" \"}\n          {\" \"}\n          To:\n          {\" \"}\n          {data.educationEndDate}\n        </p>\n      </div>\n    );\n\n    const workDiv = (data) => (\n      <div key={data.id} className=\"work-info-display\">\n        <p className=\"work-title-display\">{data.workTitle}</p>\n        <p>{data.workCompany}</p>\n        <p className=\"work-time\">\n          From:\n          {data.workStartDate}\n          {\" \"}\n          {\" \"}\n          To:\n          {\" \"}\n          {data.workEndDate}\n        </p>\n        <p className=\"work-responsibilities\">{data.workResponsibilities}</p>\n      </div>\n    );\n\n    return (\n      <div style={style} className=\"CV-display-div\">\n        {generalDiv}\n        <hr />\n        <div className=\"CV-body-div\">\n          <div className=\"education-and-skills-section\">\n            <h2>Skills</h2>\n            {skills.map((el) => skillsDiv(el))}\n            <hr />\n            <h2>Education</h2>\n            {education.map((el) => educationDiv(el))}\n          </div>\n          <div className=\"vertical-line\" />\n          <div className=\"work-section\">\n            <h2>Work</h2>\n            {work.map((el) => workDiv(el))}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nCVDisplay.propTypes = {\n  style: PropTypes.object,\n  CVData: PropTypes.object,\n};\n\nCVDisplay.defaultProps = {\n  style: {},\n  CVData: {},\n};\n\nexport default CVDisplay;\n","import React, { Component } from \"react\";\nimport CVInput from \"./components/CVInput\";\nimport CVDisplay from \"./components/CVDisplay\";\nimport \"./styles/App.css\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      CVInputStyle: { display: \"flex\" },\n      CVDisplayStyle: { display: \"none\" },\n      CVData: {\n        general: {}, education: [], work: [], skills: [],\n      },\n    };\n\n    this.editButtonEventHandler = this.editButtonEventHandler.bind(this);\n    this.previewButtonEventHandler = this.previewButtonEventHandler.bind(this);\n    this.dataHandler = this.dataHandler.bind(this);\n  }\n\n  editButtonEventHandler() {\n    this.setState({\n      CVInputStyle: { display: \"flex\" },\n      CVDisplayStyle: { display: \"none\" },\n    });\n  }\n\n  previewButtonEventHandler() {\n    this.setState({\n      CVInputStyle: { display: \"none\" },\n      CVDisplayStyle: { display: \"flex\" },\n    });\n  }\n\n  dataHandler(section, data) {\n    const { CVData } = this.state;\n    let {\n      general, education, work, skills,\n    } = CVData;\n\n    if (section === \"general\") {\n      general = data;\n    }\n    if (section === \"education\") {\n      education = data;\n    }\n    if (section === \"work\") {\n      work = data;\n    }\n    if (section === \"skills\") {\n      skills = data;\n    }\n\n    this.setState({\n      CVData: {\n        general, education, work, skills,\n      },\n    });\n  }\n\n  render() {\n    const { CVInputStyle, CVDisplayStyle, CVData } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>CV Application</h1>\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className=\"edit\"\n            onClick={this.editButtonEventHandler}\n          >\n            Edit\n          </button>\n          <button\n            type=\"button\"\n            className=\"preview\"\n            onClick={this.previewButtonEventHandler}\n          >\n            Preview\n          </button>\n        </div>\n        <CVInput dataHandler={this.dataHandler} style={CVInputStyle} />\n        <CVDisplay style={CVDisplayStyle} CVData={CVData} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./styles/reset.css\";\nimport \"./styles/normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}